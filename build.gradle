buildscript {
	repositories {
		maven { // HALE artifactory
			url 'http://artifactory.esdi-humboldt.eu/artifactory/libs-release/'
		}
		mavenCentral()
		maven {
			url 'http://oss.sonatype.org/content/repositories/snapshots/'
		}
	}
	dependencies {
		classpath 'org.standardout:gradle-include-plugin:0.2.0'
		classpath 'org.standardout:bnd-platform:1.2.0'
		classpath 'org.standardout:gradle-versioneye-plugin:1.0.0'
		classpath 'zipdiff:zipdiff:0.4'
		classpath 'org.codehaus.groovy:groovy-backports-compat23:2.3+'
	}
}

apply plugin: 'eclipse'
apply plugin: 'org.standardout.bnd-platform'
apply plugin: 'org.standardout.include'
apply plugin: 'org.standardout.versioneye'

defaultTasks 'clean', 'updateSiteZip'

repositories {
	maven { // HALE artifactory
		url 'http://artifactory.esdi-humboldt.eu/artifactory/libs-release/'
	}
}

// platform version
version = '2.9.5'

ext {
	geotoolsVersion = '8.0'
	wicketVersion = '6.10.0'
}

include {
	// shared modules
	
	from 'modules/shared/default.gradle'
	
	from 'modules/shared/adaptions' // all adaptions
	
	from 'modules/resources' // resource bundles
	
	from('modules/shared/geotools.gradle') {
		geotools geotoolsVersion, [
			'gt-api',
			'gt-cql',
			'gt-epsg-hsql',
			'gt-geojson',
			'gt-main',
			'gt-shapefile',
			'gt-render',
			'gt-wfs'
		]
		// additional bundles are defined later
	}
	
	from('modules/shared/spring.gradle') {
		def v = '3.1.1.RELEASE' 
		spring v, [
			'spring-beans',
			'spring-context',
			'spring-context-support',
			'spring-web',
			'spring-webmvc'
		]
		security v, [
			'spring-security-core',
			'spring-security-config',
			'spring-security-web',
			'spring-security-cas',
			'spring-security-openid',
			'spring-security-ldap'
		]
	}
	
	from('modules/shared/logging.gradle') {
		slf4jAndLogback '1.7.5', '1.0.13'
	}
	
	from 'modules/shared/orientdb.gradle', {
		orientGraphDB '1.5.1'
	}
	
	from 'modules/shared/poi.gradle', {
		poi('3.9')
	}
	
	from('modules/shared/postgis.gradle') {
		postgis(
			'2.0.1', // PostGIS driver version
			'9.2-1002-jdbc4', // PostgreSQL driver version
			[
				// buddies
				'eu.esdihumboldt.hale.io.jdbc',
				'net.sourceforge.schemacrawler'
			]
		)
	}
	
	from 'modules/shared/gemini-blueprint.gradle'
	
	from('modules/shared/wicket.gradle') {
		wicket(wicketVersion, [
			'wicket-core',
			'wicket-request',
			'wicket-util',
			'wicket-spring',
			'wicket-extensions'
		])
	}
	
	// ensures that always a fixed version of groovy-all is used as groovy dependency
	from 'modules/shared/groovy.gradle', {
		groovyAll '2.1.5', true, 'groovy'
	}
	
	// HALE specific modules

	from 'modules/schemacrawler.gradle'
	from 'modules/groovy-sandbox'
	from 'modules/zest' // Zest 2 Snapshot - TODO instead use official release
	from 'modules/wicket-bootstrap'
	from 'modules/slf4jplus-config'
	
	// CS3D dependencies for Styled Map View
	from 'modules/cs3d-map'
	
	// support bundles for jetty 8/9
	from 'modules/jetty-support'
}

configurations {
	// exclude bundles conflicting with JRE-provided packages
	platform.exclude group: 'javax.xml'
	platform.exclude group: 'javax.xml.bind'
	platform.exclude group: 'javax.activation'
	
	/*
	 * They have to be excluded as just removing the version constraint on
	 * corresponding package imports is not enough - bundles that only have
	 * optional imports may still bind to them, as they have no explicit
	 * dependency on the system bundle.
	 */
	
	
	// fix OrientDB 1.5.1 dependenies (which were manually added to the artifactory)
	// the original verions are snapshots that no longer work with OrientDB 1.5.1
	platform {
		resolutionStrategy.eachDependency { DependencyResolveDetails details ->
			if (
					(details.requested.group == 'com.tinkerpop.blueprints' &&
						(details.requested.name == 'blueprints-core' || details.requested.name == 'blueprints-orient-graph')) ||
					(details.requested.group == 'com.tinkerpop.gremlin' &&
						(details.requested.name == 'gremlin-groovy' || details.requested.name == 'gremlin-java')) ||
					(details.requested.group == 'com.tinkerpop' && details.requested.name == 'pipes')
				) {
				// use custom version
				details.useVersion '2.5.0-orientDB151'
			}
		}
	}
}

platform {
	fetchSources = true
	determineImportVersions = true
	auxVersionedSymbolicNames = true
	featureId = 'eu.esdihumboldt.hale.platform'
	featureName = 'HALE Target Platform Libraries'
	
	// override behavior for all bundles to prevent package uses conflicts for packages provided by the JRE
	override {
		optionalImport(
			// no version requirement for certain JRE provided packages
			// use wildcards to not enforce imports
			// use optional imports as otherwise we suddenly get errors in Eclipse while resolving seemingly random optional(!) package imports
			'javax.xml.*',
			'org.w3c.dom.*',
			'org.xml.sax.*',
			'javax.activation.*',
			'com.sun.xml.internal.*',
			// also make JUnit optional everywhere - so we can exclude it from products
			'junit.framework.*',
			'org.junit.*'
		)
	}
	
	// geotools additional bundles not in the default group
	bundle group: 'org.geotools.xsd', name: 'gt-xsd-core', version: geotoolsVersion
	bundle group: 'org.geotools.xsd', name: 'gt-xsd-gml2', version: geotoolsVersion
	bundle group: 'org.geotools.xsd', name: 'gt-xsd-gml3', version: geotoolsVersion
	
	// security
	bundle 'org.jasig.cas:cas-client:3.1.10'
	
	// utilities
	bundle 'com.google.guava:guava:15.0'
	bundle 'net.sf.trove4j:trove4j:2.0.4' // with version 3 some packages have changed
	bundle 'commons-io:commons-io:2.4'
	bundle 'net.sf.ehcache:ehcache-core:2.6.6'
	bundle 'org.apache.velocity:velocity:1.6.2'
	bundle 'org.apache.xmlbeans:xmlbeans:2.4.0'
	bundle 'com.iabcinc:jmep:0.1.0'
	bundle 'com.google.code.findbugs:jsr305:2.0.3'
	bundle 'eu.esdihumboldt.hale:prefixmapper:1.0.1'
	bundle 'joda-time:joda-time:2.3'
	
	bundle 'cglib:cglib:2.2.2'
	bundle 'asm:asm-util:3.3.1' // optional dependency to cglib
	bundle 'asm:asm-analysis:3.3.1'

	// pegdown	
	bundle group: 'org.pegdown', name: 'pegdown', version: '1.4.2'
	// parboiled must be able to access pegdown
	bnd group: 'org.parboiled', name: 'parboiled-core', {
		instructions 'Eclipse-BuddyPolicy': 'registered'
	}
	bnd group: 'org.pegdown', name: 'pegdown', {
		instructions(
			'Require-Bundle': 'org.parboiled.core',
			'Eclipse-RegisterBuddy': 'org.parboiled.core'
		)
	}
	
	// web stuff
	bundle 'commons-fileupload:commons-fileupload:1.3.1'
	bundle 'org.openid4java:openid4java:0.9.8'
	bundle 'net.tanesha.recaptcha4j:recaptcha4j:0.0.8'
	bundle "org.wicketstuff:wicketstuff-html5:$wicketVersion"
	bundle 'org.codehaus.groovy.modules.http-builder:http-builder:0.6'
	
	// fluent HTTP client API
	bundle 'org.apache.httpcomponents:fluent-hc:4.3.3'
	
	// quartz scheduler
	bundle 'org.quartz-scheduler:quartz:1.7.3'
	
	// XML
//	bundle 'org.apache.ws.xmlschema:xmlschema-core:2.0.2'
	bundle 'org.apache.ws.commons.schema:XmlSchema:1.4.7'
	bundle 'org.codehaus.castor:castor-xml:1.3.2'
	bundle 'org.codehaus.castor:castor-core:1.3.2'
	bundle 'com.sun.xml.bind:jaxb-core:2.2.7'
	
	// jackson 1
	bundle 'org.codehaus.jackson:jackson-core-asl:1.9.13', {
		bnd {
			symbolicName = 'org.codehaus.jackson'
		}
	}
	bundle 'org.codehaus.jackson:jackson-mapper-asl:1.9.13', {
		bnd {
			symbolicName = 'org.codehaus.jackson.mapper'
		}
	}
	// jackson 2
	bundle 'com.fasterxml.jackson.core:jackson-core:2.3.0'
	bundle 'com.fasterxml.jackson.core:jackson-databind:2.3.0'
	
	// spring osgi legacy
	bundle 'de.cs3d.thirdparty:springframework-osgi-web-mini:2.0.0.M1'
	
	// CSV
	bundle 'net.sf.opencsv:opencsv:2.3'
	
	// resources (partly replaced by resources module)
	bundle group: 'eu.esdihumboldt.util.resource', name: 'schemas.citygml', version: '1.0.0.20120927'
	//bundle group: 'eu.esdihumboldt.util.resource', name: 'schemas.opengis.net', version: '1.0.0.201202131112'
	//bundle group: 'eu.esdihumboldt.util.resource', name: 'schemas.inspire', version: '1.0.0.20120927'
	bundle group: 'eu.esdihumboldt.util.resource', name: 'schemas.test', version: '1.0.0.201205101531'
	
	/*
	 * XXX Orient graph DB hack
	 * 
	 * The tinkerpop blueprints implementation for OrientDB (at least in version 1.5.1 of OrientDB)
	 * is not compatible with the OrientDB version itself - probably because it is a SNAPSHOT.
	 * As workaround for resolving the packages we remove the version contraints on its orient imports.
	 * FIXME Instead rather specific versions of the tinkerpop libraries or a local snapshot that
	 * is guaranteed to be compatible should be used.
	 */
	bnd(group: 'com.tinkerpop.blueprints', name: 'blueprints-orient-graph') {
		instruction 'Import-Package', 'com.orientechnologies.*,' + (properties['Import-Package']?:'*')
	}
	
	/*
	 * Override bundle symbolic names (e.g. org.objectweb.asm) as they collide with
	 * bundles provided via an Eclipse update site, and both versions cannot be
	 * included in the (plugin-based) product if the symbolic name is the same.
	 * 
	 * The problem seems to persist with feature-based products as well, even
	 * as the Tycho build seems to be able to handle it given fixed versions in
	 * the feature, Eclipse will not create the Run Configuration accordingly and
	 * will not validate the product correctly.
	 */
	bnd group: 'org.ow2.asm', {
		// -> use versioned symbolic names
		def ov = org.osgi.framework.Version.parseVersion(version)
		symbolicName = symbolicName + '-' + ov.major
	}
	
	imports 'com.google.guava:guava', {
		versionStrategy = MINIMUM
	}
	
	// HALE FME plugin
	bundle 'de.fhg.igd.hale:fme-exec:1.1.0'
	bundle 'de.fhg.igd.hale:fme-ui:1.3.0'
	bundle 'de.fhg.igd.hale:fme-doc:1.1.0'
}

dependencies {
  platform 'de.fhg.igd:osgi-util:1.0', {
    // exclude OSGi dependencies (we include Equinox/Eclipse through separate update site)
    exclude module: 'org.eclipse.osgi'
    exclude module: 'org.osgi.compendium'
  }
}

dependencies {
	// additional versions of Google Guava
	//XXX Guava is too basic, multiple versions result in a bunch of package uses conflicts
//	platformaux 'com.google.guava:guava:14.0.1'
//	platformaux 'com.google.guava:guava:11.0.2'
}

project.ext {
	updateSiteMergeDir = file('../hale-build-support/updatesites/platform')
}

def mergeOldJars(File targetFolder, File referenceFolder, String resourceName, boolean bndFallback) {
	def numReplaced = 0
	def numRetained = 0
	
	// test all new bundles
	targetFolder.eachFile(groovy.io.FileType.FILES) { File nb ->
		// if there is an old bundle with the same name
		File ob = new File(referenceFolder, nb.name)
		if (ob.exists()) {
			// compare files
			def diffcal = new zipdiff.DifferenceCalculator(ob, nb)
			diffcal.ignoreTimestamps = true
			diffcal.compareCRCValues = true
			def diff = diffcal.differences
			
			boolean replace
			if (diff.hasDifferences()) {
				if (bndFallback) {
					// use bnd diff that does a real diff on the manifest headers
					def diffPlugin = new aQute.bnd.differ.DiffPluginImpl()
					def otree = diffPlugin.tree(ob)
					def ntree = diffPlugin.tree(nb)
					def bndDiff = ntree.diff(otree)
					
					switch (bndDiff.delta) {
						case aQute.bnd.service.diff.Delta.IGNORED:
						case aQute.bnd.service.diff.Delta.UNCHANGED:
							replace = true
							break
						default:
							replace = false
					}
				}
				else replace = false
			}
			else {
				replace = true
			}
			
			if (replace) {
				// replace new file with old/reference file
				ant.copy(file: ob, tofile: nb, overwrite: true)
				logger.info("Replaced $resourceName $nb.name with previously created version")
				numReplaced++
			}
			else {
				println diff.toString()
				numRetained++
			}
		}
		else {
			println "No reference $resourceName found for $nb.name"
			numRetained++
		}
	}
	
	println "Replaced $numReplaced ${resourceName}s with version (with equal content) from reference update site"
	println "Retained $numRetained ${resourceName}s that have changes compared to the current update site version"
}

/*
 * Merge with old update site in hale-build-support to prevent unnecessary
 * pollution of the hale-build-support repository. 
 */
task mergeOldSite(dependsOn: [tasks.bundles, tasks.bundleFeatures]) << {
	// bundles
	File newBundles = new File(project.buildDir, 'plugins')
	File oldBundles = new File(updateSiteMergeDir, 'plugins')
	
	if (oldBundles.exists()) {
		logger.warn("Attempting to merge existing update site at $oldBundles, may replace bundles with previously created bundles")
		mergeOldJars(newBundles, oldBundles, 'bundle', true)
	}
	else {
		logger.warn("Skipping merge with current update site content, as directory $oldBundles was not found")
	}
	
	// features
	File newFeatures = new File(project.buildDir, 'features')
	File oldFeatures = new File(updateSiteMergeDir, 'features')
	
	if (oldFeatures.exists()) {
		logger.warn("Attempting to merge existing update site at $oldFeatures, may replace features with previously created features")
		mergeOldJars(newFeatures, oldFeatures, 'feature', false)
	}
	else {
		logger.warn("Skipping merge with current update site content, as directory $oldFeatures was not found")
	}
}
tasks.updateSite.dependsOn mergeOldSite

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}
